void CPPUNIT_ASSERT(bool condition) {
    if (!condition)
        __coverity_panic__();
}

class SBuf {
    public:
    SBuf(const char *S, unsigned int n) {
     __coverity_string_size_sanitize__((void*)S);
    }
};

void Must(bool condition) {
    if (!condition)
        __coverity_panic__();
}

void exit(int result) {
        __coverity_panic__();
}

namespace __coverity_template__
{

class RefCount
{
    void dereference(void const *newP = nullptr) { p_ = newP; }
    void reference(const RefCount& ) {}
    void const *p_;
};

}
